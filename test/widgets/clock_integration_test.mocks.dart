// Mocks generated by Mockito 5.4.6 from annotations
// in item_manager/test/widgets/clock_integration_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:item_manager/services/secure_storage_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i2.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> storeTokens({
    required String? accessToken,
    required String? refreshToken,
    required String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#storeTokens, [], {
              #accessToken: accessToken,
              #refreshToken: refreshToken,
              #userId: userId,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getAccessToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAccessToken, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<String?> getRefreshToken() =>
      (super.noSuchMethod(
            Invocation.method(#getRefreshToken, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<String?> getUserId() =>
      (super.noSuchMethod(
            Invocation.method(#getUserId, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<String?> getDeviceId() =>
      (super.noSuchMethod(
            Invocation.method(#getDeviceId, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<bool> isBiometricEnrolled() =>
      (super.noSuchMethod(
            Invocation.method(#isBiometricEnrolled, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> setBiometricEnrolled(bool? enrolled) =>
      (super.noSuchMethod(
            Invocation.method(#setBiometricEnrolled, [enrolled]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isPinSet() =>
      (super.noSuchMethod(
            Invocation.method(#isPinSet, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> setPinSet(bool? set) =>
      (super.noSuchMethod(
            Invocation.method(#setPinSet, [set]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> storePinHash(String? pinHash) =>
      (super.noSuchMethod(
            Invocation.method(#storePinHash, [pinHash]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> verifyPin(String? pin) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPin, [pin]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> isLockedOut() =>
      (super.noSuchMethod(
            Invocation.method(#isLockedOut, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<int> getRemainingLockoutTime() =>
      (super.noSuchMethod(
            Invocation.method(#getRemainingLockoutTime, []),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<void> recordFailedAttempt() =>
      (super.noSuchMethod(
            Invocation.method(#recordFailedAttempt, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int> getFailedAttempts() =>
      (super.noSuchMethod(
            Invocation.method(#getFailedAttempts, []),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<void> clearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllData, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
